DATAS SEGMENT
	CM DB 'MENU',0ah,0dh,'1: ADD',0ah,0dh,'2: SUB',0ah,0dh,'3: MUL',0ah,0dh,'4: DIV',0ah,0dh,'5: QUI',0ah,0dh,'CHOOSE A FUNCTION: ','$'
    IM DB 'INPUT TWO NUMBERS: ','$'
    EM DB 'INVALID INPUT','$'
    OM DB 'OUTPUT: ','$'
    NL DB 0ah,0dh,'$'
    BF DW 0,0
    OP DB 0
DATAS ENDS

CODES SEGMENT
    ASSUME CS:CODES,DS:DATAS
START:
    MOV AX,DATAS
    MOV DS,AX
    
    MOV WORD PTR BF[0], 0
    MOV WORD PTR BF[2], 0
    
    ;此处输入代码段代码
    
    LEA DX,OFFSET CM
    MOV AH,9 
    INT 21H
    
    MOV AH,1 ;输入一个字符
    INT 21H
    
    CMP AL,'1'
    JNB J1
    
    LEA DX, OFFSET NL
    MOV AH,9
    INT 21H
    
    LEA DX, OFFSET EM
    MOV AH,9
    INT 21H
    
    LEA DX, OFFSET NL
    MOV AH,9
    INT 21H
    
    LEA DX, OFFSET NL
    MOV AH,9
    INT 21H
    
    JMP START

J1:
    CMP AL,'5'
    JNA J2
    
    LEA DX, OFFSET NL
    MOV AH,9
    INT 21H
    
    LEA DX, OFFSET EM
    MOV AH,9
    INT 21H
    
    LEA DX, OFFSET NL
    MOV AH,9
    INT 21H
    
    LEA DX, OFFSET NL
    MOV AH,9
    INT 21H
    
    JMP START

J2:
    LEA BX,OFFSET OP
    MOV BYTE PTR DS:[BX],AL
    CMP BYTE PTR DS:[BX], '5'
    JE QUIT
    
    LEA DX,OFFSET NL
    MOV AH,9 
    INT 21H
    
    LEA DX,OFFSET IM
    MOV AH,9
    INT 21H
    
    MOV SI,0
INPUT:
	MOV AH,1
	INT 21H
	
	CMP AL,20H
	JNE JUDGE
	ADD SI,2
	JMP INPUT
	
JUDGE:
	CMP AL,0DH
	JNE CHANGE
	JMP COMPUTE

CHANGE:
	MOV CL,AL
	SUB CL,30H
	MOV AX,WORD PTR BF[SI]
	MOV BX,10
	MUL BX
	MOV CH,0
	ADD AX,CX
	MOV WORD PTR BF[SI], AX
	JMP INPUT

COMPUTE:
LEA BX,OFFSET OP
	CMP BYTE PTR DS:[BX], '1'
	JE F1
	
	CMP BYTE PTR DS:[BX], '2'
	JE F2
	
	CMP BYTE PTR DS:[BX], '3'
	JE F3
	
	CMP BYTE PTR DS:[BX], '4'
	JNE QUIT
	JMP F4

F1:
	CALL CF1
	JMP SHOW
F2:
	CALL CF2
	JMP SHOW
F3:
	CALL CF3
	JMP SHOW
F4: 
	CALL CF4
	JMP SHOW



SHOW:
   	MOV CX,0
SPL:
    MOV DX, 0
	MOV BX, 10
	DIV BX
	ADD DX, 30H
	PUSH DX
	INC CX
	CMP AX, 0
	JNE SPL
	
PRINT:
	POP DX
	MOV AH, 02H
	INT 21H
	LOOP PRINT
	LEA DX, OFFSET NL
    MOV AH,9
    INT 21H
    LEA DX, OFFSET NL
    MOV AH,9
    INT 21H
	JMP START
    
QUIT:
    MOV AH,4CH
    INT 21H
    
CF1 PROC
	LEA DX, OFFSET OM
    MOV AH,9
    INT 21H
	MOV AX,WORD PTR BF[0]
    ADD AX,WORD PTR BF[2]
    RET
CF1 ENDP


CF2 PROC
	LEA DX, OFFSET OM
    MOV AH,9
    INT 21H
	MOV AX,WORD PTR BF[0]
	CMP AX,WORD PTR BF[2]
	JA R
	MOV BX,WORD PTR BF[2]
	SUB BX,AX
	MOV DL,2DH
	MOV AH,2
	INT 21H
	MOV AX,BX
	RET
R:	
	SUB AX,WORD PTR BF[2]
	RET
CF2 ENDP


CF3 PROC
	LEA DX, OFFSET OM
    MOV AH,9
    INT 21H
	MOV AX,WORD PTR BF[0]
    MUL WORD PTR BF[2]
	RET
CF3 ENDP


CF4 PROC
	LEA DX, OFFSET OM
    MOV AH,9
    INT 21H
	MOV AX,WORD PTR BF[0]
	MOV BL,BYTE PTR BF[2]
	DIV BL
	MOV AH,0
	RET
CF4 ENDP


CODES ENDS
    END START
